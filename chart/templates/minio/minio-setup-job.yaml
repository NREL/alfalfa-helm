{{- if .Values.minio.enabled -}}
{{- $fullName := include "alfalfa.fullname" . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $fullName }}-minio-setup
  labels:
    {{- include "alfalfa.labels" . | nindent 4 }}
    app.kubernetes.io/component: minio-setup
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "alfalfa.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: minio-setup
    spec:
      restartPolicy: OnFailure
      containers:
        - name: minio-setup
          image: {{ .Values.minio.mc.image }}
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Waiting for MinIO to be ready..."
              until mc alias set minio http://{{ $fullName }}-minio:{{ .Values.minio.service.ports.api }} $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD; do
                echo "Waiting for MinIO server..."
                sleep 5
              done
              echo "MinIO is ready. Ensuring bucket exists..."
              mc mb minio/{{ include "alfalfa.s3.bucket" . }} --ignore-existing
              echo "Setting up bucket policies if needed..."
              # Add any additional bucket configuration here
              echo "MinIO setup complete"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-s3
                  key: AWS_ACCESS_KEY_ID
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-s3
                  key: AWS_SECRET_ACCESS_KEY
{{- end }}
